import{_ as S,V as A}from"./AppAutocomplete-b0z8HXmX.js";import{r as b,f as _,o as h,aX as g,m as u,e as a,b as e,dK as M,a1 as N,w as I,q as y,bd as F,be as T,b4 as G,b2 as U,b3 as W,bp as $,bo as O,dj as P,d as n,t as i}from"./index-oM6dt0nl.js";import{a as H}from"./VList-cYsfAEAC.js";import{V as L}from"./VChip-FseWGz3T.js";import{a as p,V}from"./VRow-DUBqKGkl.js";import{_ as R}from"./AppCardCode-CjFvjsk9.js";import"./form-Cd7ZM7vN.js";import"./VSelect-BESIb1eD.js";import"./VTextField-DgWiWPzB.js";/* empty css                   */import"./VCounter-CDVAsv0J.js";import"./VImg-CbCuusDt.js";import"./VField-2OujSMcs.js";import"./easing-CjukEv2V.js";import"./VInput-Br_2EQnr.js";import"./forwardRefs-C-GTDzx5.js";import"./dialog-transition-I-DGYdwc.js";import"./VMenu-CMOaXPv7.js";import"./VOverlay-C8aSNeq7.js";import"./delay-b3pLEGXA.js";import"./lazy-S_p9USlT.js";import"./scopeId-CPb6oRpW.js";import"./VCheckboxBtn-_cW8_NgR.js";import"./VSelectionControl-CRT6_zMy.js";import"./VAvatar-B-sFcdAe.js";import"./filter-co5KQ_N_.js";import"./ssrBoot-BPLKHfuF.js";import"./VDivider-D7iOkos2.js";import"./VSlideGroup-Bm28qC-v.js";/* empty css              */import"./vue3-perfect-scrollbar-QmlUH9_e.js";import"./VCard-FM1MZCfp.js";import"./VCardText-ByzvGG12.js";const B={__name:"DemoAutocompleteValidation",setup(f){const t=["foo","bar","fizz","buzz"],s=b(["foo"]),c=[o=>!!o.length||"Select at least one option."];return(o,r)=>{const m=S;return h(),_(m,{modelValue:u(s),"onUpdate:modelValue":r[0]||(r[0]=l=>g(s)?s.value=l:null),items:t,rules:c,placeholder:"Select Option",multiple:""},null,8,["modelValue"])}}},z={__name:"DemoAutocompleteStateSelector",setup(f){const t=b(!1),s=b(null),c=["Alabama","Alaska","American Samoa","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","District of Columbia","Federated States of Micronesia","Florida","Georgia","Guam","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Marshall Islands","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Carolina","North Dakota","Northern Mariana Islands","Ohio","Oklahoma","Oregon","Palau","Pennsylvania","Puerto Rico","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virgin Island","Virginia","Washington","West Virginia","Wisconsin","Wyoming"];return(o,r)=>{const m=S;return h(),_(m,{modelValue:u(s),"onUpdate:modelValue":r[1]||(r[1]=l=>g(s)?s.value=l:null),hint:u(t)?"Click the icon to save":"Click the icon to edit",placeholder:"Select Your State",items:c,readonly:!u(t),label:`State â€” ${u(t)?"Editable":"Readonly"}`,"persistent-hint":"","prepend-icon":"tabler-building","menu-props":{maxHeight:"200px"}},{append:a(()=>[e(M,{mode:"out-in"},{default:a(()=>[(h(),_(N,{key:`icon-${u(t)}`,color:u(t)?"success":"info",icon:u(t)?"tabler-checks":"tabler-edit-circle",onClick:r[0]||(r[0]=l=>t.value=!u(t))},null,8,["color","icon"]))]),_:1})]),_:1},8,["modelValue","hint","readonly","label"])}}},Y={__name:"DemoAutocompleteAsyncItems",setup(f){const t=b(!1),s=b(),c=b(null),o=["Alabama","Alaska","American Samoa","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","District of Columbia","Federated States of Micronesia","Florida","Georgia","Guam","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Marshall Islands","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Carolina","North Dakota","Northern Mariana Islands","Ohio","Oklahoma","Oregon","Palau","Pennsylvania","Puerto Rico","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virgin Island","Virginia","Washington","West Virginia","Wisconsin","Wyoming"],r=b(o),m=l=>{t.value=!0,setTimeout(()=>{r.value=o.filter(d=>(d||"").toLowerCase().includes((l||"").toLowerCase())),t.value=!1},500)};return I(s,l=>{l&&l!==c.value&&m(l)}),(l,d)=>(h(),_(A,{modelValue:u(c),"onUpdate:modelValue":d[0]||(d[0]=v=>g(c)?c.value=v:null),search:u(s),"onUpdate:search":d[1]||(d[1]=v=>g(s)?s.value=v:null),loading:u(t),items:u(r),placeholder:"Search for a state",label:"What state are you from?",variant:"underlined","menu-props":{maxHeight:"200px"}},null,8,["modelValue","search","loading","items"]))}},K={__name:"DemoAutocompleteSlots",setup(f){const t=b(["Sandra Adams","Britta Holt"]),s=[{name:"Sandra Adams",group:"Group 1",avatar:F},{name:"Ali Connors",group:"Group 1",avatar:T},{name:"Trevor Hansen",group:"Group 1",avatar:G},{name:"Tucker Smith",group:"Group 1",avatar:U},{name:"Britta Holt",group:"Group 2",avatar:W},{name:"Jane Smith ",group:"Group 2",avatar:$},{name:"John Smith",group:"Group 2",avatar:O},{name:"Sandra Williams",group:"Group 2",avatar:P}];return(c,o)=>{const r=S;return h(),_(r,{modelValue:u(t),"onUpdate:modelValue":o[0]||(o[0]=m=>g(t)?t.value=m:null),chips:"","closable-chips":"",multiple:"",items:s,"item-title":"name","item-value":"name",placeholder:"Select User",label:"Select"},{chip:a(({props:m,item:l})=>[e(L,y(m,{"prepend-avatar":l.raw.avatar,text:l.raw.name}),null,16,["prepend-avatar","text"])]),item:a(({props:m,item:l})=>{var d,v,C;return[e(H,y(m,{"prepend-avatar":(d=l==null?void 0:l.raw)==null?void 0:d.avatar,title:(v=l==null?void 0:l.raw)==null?void 0:v.name,subtitle:(C=l==null?void 0:l.raw)==null?void 0:C.group}),null,16,["prepend-avatar","title","subtitle"])]}),_:1},8,["modelValue"])}}},J={__name:"DemoAutocompleteCustomFilter",setup(f){const t=[{name:"Florida",abbr:"FL",id:1},{name:"Georgia",abbr:"GA",id:2},{name:"Nebraska",abbr:"NE",id:3},{name:"California",abbr:"CA",id:4},{name:"New York",abbr:"NY",id:5}];function s(c,o,r){const m=r.raw.name.toLowerCase(),l=r.raw.abbr.toLowerCase(),d=o.toLowerCase();return m.includes(d)||l.includes(d)}return(c,o)=>{const r=S;return h(),_(r,{label:"States",items:t,"custom-filter":s,"item-title":"name","item-value":"abbr",placeholder:"Select State"})}}},E={__name:"DemoAutocompleteChips",setup(f){const t=["California","Colorado","Florida","Georgia","Texas","Wyoming"];return(s,c)=>{const o=S;return h(),_(o,{label:"States",items:t,placeholder:"Select State",chips:"",multiple:"","closable-chips":""})}}},j={__name:"DemoAutocompleteClearable",setup(f){const t=["California","Colorado","Florida","Georgia","Texas","Wyoming"];return(s,c)=>{const o=S;return h(),_(o,{label:"States",items:t,multiple:"",placeholder:"Select State",clearable:""})}}},X={__name:"DemoAutocompleteMultiple",setup(f){const t=["California","Colorado","Florida","Georgia","Texas","Wyoming"];return(s,c)=>{const o=S;return h(),_(o,{label:"States",items:t,placeholder:"Select State",multiple:"",eager:""})}}},q={__name:"DemoAutocompleteVariant",setup(f){const t=["California","Colorado","Florida","Georgia","Texas","Wyoming"];return(s,c)=>(h(),_(V,null,{default:a(()=>[e(p,{cols:"12",md:"6"},{default:a(()=>[e(A,{variant:"solo",label:"Solo",items:t,placeholder:"Select State"})]),_:1}),e(p,{cols:"12",md:"6"},{default:a(()=>[e(A,{variant:"outlined",label:"Outlined",placeholder:"Select State",items:t})]),_:1}),e(p,{cols:"12",md:"6"},{default:a(()=>[e(A,{variant:"underlined",label:"Underlined",placeholder:"Select State",items:t})]),_:1}),e(p,{cols:"12",md:"6"},{default:a(()=>[e(A,{variant:"filled",label:"Filled",placeholder:"Select State",items:t})]),_:1}),e(p,{cols:"12",md:"6"},{default:a(()=>[e(A,{variant:"plain",label:"Plain",placeholder:"Select State",items:t})]),_:1})]),_:1}))}},Q={__name:"DemoAutocompleteDensity",setup(f){const t=b("Florida"),s=["California","Colorado","Florida","Georgia","Texas","Wyoming"];return(c,o)=>{const r=S;return h(),_(r,{modelValue:u(t),"onUpdate:modelValue":o[0]||(o[0]=m=>g(t)?t.value=m:null),label:"States",density:"compact",placeholder:"Select State",items:s},null,8,["modelValue"])}}},Z={__name:"DemoAutocompleteBasic",setup(f){const t=["California","Colorado","Florida","Georgia","Texas","Wyoming"];return(s,c)=>{const o=S;return h(),_(o,{label:"States",items:t,placeholder:"Select State"})}}},ee={},te={},oe={},ae={},le={},ne={},se={},ie={},re={},ce={},me={},pe=n("p",null,[i(" The "),n("code",null," v-autocomplete "),i(" component offers simple and flexible type-ahead functionality. This is useful when searching large sets of data or even dynamically fetching information from an API. ")],-1),ue=n("p",null,[i(" You can use "),n("code",null," density "),i(" prop to adjusts vertical spacing within the component. Available options are: "),n("code",null,"default"),i(", "),n("code",null,"comfortable"),i(", and "),n("code",null,"compact"),i(". ")],-1),de=n("p",null,[i("Use "),n("code",null,"Solo"),i(", "),n("code",null,"Outlined"),i(", "),n("code",null,"Underlined"),i(", "),n("code",null,"Filled"),i(" and "),n("code",null,"Plain"),i(" options of "),n("code",null,"variant"),i(" prop to change the look of Autocomplete. ")],-1),_e=n("p",null,[i("Use "),n("code",null,"multiple"),i(" prop to select multiple. Accepts array for value")],-1),he=n("p",null,[i("Use "),n("code",null,"clearable"),i(" prop to add input clear functionality.")],-1),fe=n("p",null,[i("Use "),n("code",null," chips "),i(" prop to use chips in select.")],-1),be=n("p",null,[i("The "),n("code",null," custom-filter "),i(" prop can be used to filter each individual item with custom logic.In example we will filter state based on their name and abbreviations ")],-1),Se=n("p",null,"With the power of slots, you can customize the visual output of the select. In this example we add a profile picture for both the chips and list items using their props. ",-1),ve=n("p",null,"Sometimes you need to load data externally based upon a search query. ",-1),Ae=n("p",null,"Using a combination of v-autocomplete slots and transitions, you can create a stylish toggle able autocomplete field such as below state selector.",-1),ge=n("p",null,[i("Use "),n("code",null,"rules"),i(" prop to validate autocomplete. Accepts a mixed array of types function, boolean and string. Functions pass an input value as an argument and must return either true / false or a string containing an error message.")],-1),tt={__name:"autocomplete",setup(f){return(t,s)=>{const c=Z,o=R,r=Q,m=q,l=X,d=j,v=E,C=J,w=K,x=Y,D=z,k=B;return h(),_(V,{class:"match-height"},{default:a(()=>[e(p,{cols:"12",md:"6"},{default:a(()=>[e(o,{title:"Basic",code:te},{default:a(()=>[pe,e(c)]),_:1},8,["code"])]),_:1}),e(p,{cols:"12",md:"6"},{default:a(()=>[e(o,{title:"Density",code:ne},{default:a(()=>[ue,e(r)]),_:1},8,["code"])]),_:1}),e(p,{cols:"12",md:"12"},{default:a(()=>[e(o,{title:"Variant",code:me},{default:a(()=>[de,e(m)]),_:1},8,["code"])]),_:1}),e(p,{cols:"12",md:"6"},{default:a(()=>[e(o,{title:"Multiple",code:se},{default:a(()=>[_e,e(l)]),_:1},8,["code"])]),_:1}),e(p,{cols:"12",md:"6"},{default:a(()=>[e(o,{title:"Clearable",code:ae},{default:a(()=>[he,e(d)]),_:1},8,["code"])]),_:1}),e(p,{cols:"12",md:"6"},{default:a(()=>[e(o,{title:"Chips",code:oe},{default:a(()=>[fe,e(v)]),_:1},8,["code"])]),_:1}),e(p,{cols:"12",md:"6"},{default:a(()=>[e(o,{title:"Custom-Filter",code:le},{default:a(()=>[be,e(C)]),_:1},8,["code"])]),_:1}),e(p,{cols:"12",md:"6"},{default:a(()=>[e(o,{title:"Slots",code:ie},{default:a(()=>[Se,e(w)]),_:1},8,["code"])]),_:1}),e(p,{cols:"12",md:"6"},{default:a(()=>[e(o,{title:"Async items",code:ee},{default:a(()=>[ve,e(x)]),_:1},8,["code"])]),_:1}),e(p,{cols:"12",md:"6"},{default:a(()=>[e(o,{title:"State Selector",code:re},{default:a(()=>[Ae,e(D)]),_:1},8,["code"])]),_:1}),e(p,{cols:"12",md:"6"},{default:a(()=>[e(o,{title:"validation",code:ce},{default:a(()=>[ge,e(k)]),_:1},8,["code"])]),_:1})]),_:1})}}};export{tt as default};
